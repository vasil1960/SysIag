/*
 * File: app/controller/RdgAndDgs.js
 *
 * This file was generated by Sencha Architect version 3.5.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('sysIag.controller.RdgAndDgs', {
    extend: 'Ext.app.Controller',
    alias: 'controller.rdganddgs',

    config: {
        refs: {
            rdgnav: 'rdgnav',
            rdgtalist: 'rdgtalist',
            rdgtauserslist: 'rdgtauserslist',
            searchfield: 'searchfield',
            rdgdgsnav: 'rdgdgsnav',
            rdgtsdgslist: 'rdgtadgslist',
            dgslist: 'dgslist',
            dgsuserslist: 'dgsuserslist'
        },

        control: {
            "rdgnav": {
                show: 'onRdgNavShow'
            },
            "rdgtalist": {
                itemtap: 'onRdgListItemTap'
            },
            "rdgtauserslist": {
                itemtap: 'onRdgtaUsersListItemTap'
            },
            "searchfield": {
                clearicontap: 'onSearchfieldClearicontap',
                keyup: 'onSearchfieldKeyup'
            },
            "rdgdgsnav": {
                show: 'onRdgDgsNavShow'
            },
            "rdgtadgslist": {
                itemtap: 'onRdgtaDgsListTap'
            },
            "dgslist": {
                itemtap: 'onDgsListItemTap'
            },
            "dgsuserslist": {
                itemtap: 'onDgsUsersListTap'
            }
        }
    },

    onRdgNavShow: function(component, eOpts) {

        this.getApplication().getController('Func').loadStore('RdgtaStore');

        console.log('rdgta tab show');
    },

    onRdgListItemTap: function(dataview, index, target, record, e, eOpts) {

        var store = Ext.getStore('RdgtaUsers');

        store.getProxy().setExtraParams({podid: record.get('Pod_Id')});

        this.getApplication().getController('Func').loadStore(store);

        this.getRdgnav().push({
            xtype:'rdgtauserslist',
            title:record.get('Pod_NameBg')
        });
    },

    onRdgtaUsersListItemTap: function(dataview, index, target, record, e, eOpts) {


        this.getApplication().getController('Func').callAndEmailFn(record);
    },

    onSearchfieldClearicontap: function(textfield, e, eOpts) {


        this.getApplication().getController('Func').clearSearchField('RdgtaUsers');


    },

    onSearchfieldKeyup: function(textfield, e, eOpts) {

        this.getApplication().getController('Func').searchOnNameAndFamilia(textfield,'RdgtaUsers', 'Name', 'Familia');
    },

    onRdgDgsNavShow: function(component, eOpts) {

        console.log('hi');

        this.getApplication().getController('Func').loadStore('RdgtaStore');


    },

    onRdgtaDgsListTap: function(dataview, index, target, record, e, eOpts) {

        console.log(record.get('Pod_Id'));

        var store = Ext.getStore('DgsStore');

        store.getProxy().setExtraParams({glavpod:record.get('Pod_Id')});

        this.getApplication().getController('Func').loadStore('DgsStore');

        this.getRdgdgsnav().push({
            xtype:'dgslist',
            title:record.get('Pod_NameBg')
        });
    },

    onDgsListItemTap: function(dataview, index, target, record, e, eOpts) {

        console.log('tiptap');

        var store = Ext.getStore('RdgtaUsers');

        store.getProxy().setExtraParams({podid: record.get('Pod_Id')});

        this.getApplication().getController('Func').loadStore(store);

        this.getRdgdgsnav().push({
            xtype:'dgsuserslist',
            title:record.get('Pod_NameBg')
        });
    },

    onDgsUsersListTap: function(dataview, index, target, record, e, eOpts) {

        this.getApplication().getController('Func').callAndEmailFn(record);

    }

});